Question Title,Question Slug,Question ID,Question Text,Topic Tagged text,Topic Tagged ID,Difficulty Level,Success Rate,total submission,total accepted,company tag,Likes,Dislikes,Hints,Similar Questions ID,Similar Questions Text
N-Queens,n-queens,51,"The n-queens puzzle is the problem of placing n queens on an n x n chessboard such that no two queens attack each other. Given an integer n, return all distinct solutions to the n-queens puzzle. You may return the answer in any order. Each solution contains a distinct board configuration of the n-queens' placement, where 'Q' and '.' both indicate a queen and an empty space, respectively. ","Array,Backtracking","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjE0",Hard,57.2,625138,357360,,5603,152,,"52,1043","N-Queens II,Grid Illumination"
N-Queens II,n-queens-ii,52,"The n-queens puzzle is the problem of placing n queens on an n x n chessboard such that no two queens attack each other. Given an integer n, return the number of distinct solutions to the n-queens puzzle. ",Backtracking,VG9waWNUYWdOb2RlOjE0,Hard,66.1,327225,216188,,1670,209,,51,N-Queens
Maximum Subarray,maximum-subarray,53,"Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum. A subarray is a contiguous part of an array. ","Array,Divide and Conquer,Dynamic Programming","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjEy,VG9waWNUYWdOb2RlOjEz",Easy,49.5,4544146,2249144,,19877,969,,"121,152,697,1020,1849,1893","Best Time to Buy and Sell Stock,Maximum Product Subarray,Degree of an Array,Longest Turbulent Subarray,Maximum Absolute Sum of Any Subarray,Maximum Subarray Sum After One Operation"
Spiral Matrix,spiral-matrix,54,"Given an m x n matrix, return all elements of the matrix in spiral order. ","Array,Matrix,Simulation","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjYxMDUz,VG9waWNUYWdOb2RlOjYxMDU1",Medium,41.2,1729035,713051,,6929,818,"Well for some problems, the best way really is to come up with some algorithms for simulation. Basically, you need to simulate what the problem asks us to do. We go boundary by boundary and move inwards. That is the essential operation. First row, last column, last row, first column and then we move inwards by 1 and then repeat. That's all, that is all the simulation that we need. Think about when you want to switch the progress on one of the indexes. If you progress on i out of [i, j], you'd be shifting in the same column. Similarly, by changing values for j, you'd be shifting in the same row.
Also, keep track of the end of a boundary so that you can move inwards and then keep repeating. It's always best to run the simulation on edge cases like a single column or a single row to see if anything breaks or not.","59,921","Spiral Matrix II,Spiral Matrix III"
Jump Game,jump-game,55,"You are given an integer array nums. You are initially positioned at the array's first index, and each element in the array represents your maximum jump length at that position. Return true if you can reach the last index, or false otherwise. ","Array,Dynamic Programming,Greedy","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjEz,VG9waWNUYWdOb2RlOjE3",Medium,37.7,2575216,971160,,10627,612,,"45,1428,2001","Jump Game II,Jump Game III,Jump Game VII"
Merge Intervals,merge-intervals,56,"Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input. ","Array,Sorting","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjYxMDQ5",Medium,44.8,3102911,1390388,,13083,513,,"57,252,253,495,616,715,761,768,1028,2297,2319","Insert Interval,Meeting Rooms,Meeting Rooms II,Teemo Attacking,Add Bold Tag in String,Range Module,Employee Free Time,Partition Labels,Interval List Intersections,Amount of New Area Painted Each Day,Longest Substring of One Repeating Character"
Insert Interval,insert-interval,57,"You are given an array of non-overlapping intervals intervals where intervals[i] = [starti, endi] represent the start and the end of the ith interval and intervals is sorted in ascending order by starti. You are also given an interval newInterval = [start, end] that represents the start and end of another interval. Insert newInterval into intervals such that intervals is still sorted in ascending order by starti and intervals still does not have any overlapping intervals (merge overlapping intervals if necessary). Return intervals after the insertion. ",Array,VG9waWNUYWdOb2RlOjU=,Medium,37.3,1314450,490838,,4631,334,,"56,715","Merge Intervals,Range Module"
Length of Last Word,length-of-last-word,58,"Given a string s consisting of some words separated by some number of spaces, return the length of the last word in the string. A word is a maximal substring consisting of non-space characters only. ",String,VG9waWNUYWdOb2RlOjEw,Easy,37.4,1916299,716989,,875,70,,,
Spiral Matrix II,spiral-matrix-ii,59,"Given a positive integer n, generate an n x n matrix filled with elements from 1 to n2 in spiral order. ","Array,Matrix,Simulation","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjYxMDUz,VG9waWNUYWdOb2RlOjYxMDU1",Medium,64.7,549056,355230,,3579,180,,"54,921","Spiral Matrix,Spiral Matrix III"
Permutation Sequence,permutation-sequence,60,"The set [1, 2, 3, ..., n] contains a total of n! unique permutations. By listing and labeling all of the permutations in order, we get the following sequence for n = 3: Given n and k, return the kth permutation sequence. ","Math,Recursion","VG9waWNUYWdOb2RlOjg=,VG9waWNUYWdOb2RlOjMx",Hard,42.0,633058,265892,,3601,392,,"31,46","Next Permutation,Permutations"
Rotate List,rotate-list,61,"Given the head of a linked list, rotate the list to the right by k places. ","Linked List,Two Pointers","VG9waWNUYWdOb2RlOjc=,VG9waWNUYWdOb2RlOjk=",Medium,34.8,1566873,545760,,4972,1265,,"189,725","Rotate Array,Split Linked List in Parts"
Unique Paths,unique-paths,62,"There is a robot on an m x n grid. The robot is initially located at the top-left corner (i.e., grid[0][0]). The robot tries to move to the bottom-right corner (i.e., grid[m - 1][n - 1]). The robot can only move either down or right at any point in time. Given the two integers m and n, return the number of possible unique paths that the robot can take to reach the bottom-right corner. The test cases are generated so that the answer will be less than or equal to 2 * 109. ","Math,Dynamic Programming,Combinatorics","VG9waWNUYWdOb2RlOjg=,VG9waWNUYWdOb2RlOjEz,VG9waWNUYWdOb2RlOjYxMDU2",Medium,59.9,1523012,912411,,8532,294,,"63,64,174,2192","Unique Paths II,Minimum Path Sum,Dungeon Game,Minimum Cost Homecoming of a Robot in a Grid"
Unique Paths II,unique-paths-ii,63,"You are given an m x n integer array grid. There is a robot initially located at the top-left corner (i.e., grid[0][0]). The robot tries to move to the bottom-right corner (i.e., grid[m-1][n-1]). The robot can only move either down or right at any point in time. An obstacle and space are marked as 1 or 0 respectively in grid. A path that the robot takes cannot include any square that is an obstacle. Return the number of possible unique paths that the robot can take to reach the bottom-right corner. The testcases are generated so that the answer will be less than or equal to 2 * 109. ","Array,Dynamic Programming,Matrix","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjEz,VG9waWNUYWdOb2RlOjYxMDUz",Medium,37.5,1331781,499048,,4533,371,"The robot can only move either down or right. Hence any cell in the first row can only be reached from the cell left to it. However, if any cell has an obstacle, you don't let that cell contribute to any path. So, for the first row, the number of ways will simply be 


if obstacleGrid[i][j] is not an obstacle
     obstacleGrid[i,j] = obstacleGrid[i,j - 1] 
else
     obstacleGrid[i,j] = 0


You can do a similar processing for finding out the number of ways of reaching the cells in the first column. For any other cell, we can find out the number of ways of reaching it, by making use of the number of ways of reaching the cell directly above it and the cell to the left of it in the grid. This is because these are the only two directions from which the robot can come to the current cell. Since we are making use of pre-computed values along the iteration, this becomes a dynamic programming problem.


if obstacleGrid[i][j] is not an obstacle
     obstacleGrid[i,j] = obstacleGrid[i,j - 1]  + obstacleGrid[i - 1][j]
else
     obstacleGrid[i,j] = 0","62,1022","Unique Paths,Unique Paths III"
Minimum Path Sum,minimum-path-sum,64,"Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path. Note: You can only move either down or right at any point in time. ","Array,Dynamic Programming,Matrix","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjEz,VG9waWNUYWdOb2RlOjYxMDUz",Medium,59.3,1169975,693295,,7136,97,,"62,174,741,2067,2192","Unique Paths,Dungeon Game,Cherry Pickup,Maximum Number of Points with Cost,Minimum Cost Homecoming of a Robot in a Grid"
Valid Number,valid-number,65,"A valid number can be split up into these components (in order): A decimal number can be split up into these components (in order): An integer can be split up into these components (in order): For example, all the following are valid numbers: [""2"", ""0089"", ""-0.1"", ""+3.14"", ""4."", ""-.9"", ""2e10"", ""-90E3"", ""3e+7"", ""+6e-1"", ""53.5e93"", ""-123.456e789""], while the following are not valid numbers: [""abc"", ""1a"", ""1e"", ""e3"", ""99e2.5"", ""--6"", ""-+3"", ""95a54e53""]. Given a string s, return true if s is a valid number. ",String,VG9waWNUYWdOb2RlOjEw,Hard,18.1,1483253,268485,,555,994,,8,String to Integer (atoi)
Plus One,plus-one,66,"You are given a large integer represented as an integer array digits, where each digits[i] is the ith digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0's. Increment the large integer by one and return the resulting array of digits. ","Array,Math","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjg=",Easy,42.8,2719690,1162902,,4014,4072,,"43,67,369,1031","Multiply Strings,Add Binary,Plus One Linked List,Add to Array-Form of Integer"
Add Binary,add-binary,67,"Given two binary strings a and b, return their sum as a binary string. ","Math,String,Bit Manipulation,Simulation","VG9waWNUYWdOb2RlOjg=,VG9waWNUYWdOb2RlOjEw,VG9waWNUYWdOb2RlOjE5,VG9waWNUYWdOb2RlOjYxMDU1",Easy,50.4,1625914,819020,,4851,533,,"2,43,66,1031","Add Two Numbers,Multiply Strings,Plus One,Add to Array-Form of Integer"
Text Justification,text-justification,68,"Given an array of strings words and a width maxWidth, format the text such that each line has exactly maxWidth characters and is fully (left and right) justified. You should pack your words in a greedy approach; that is, pack as many words as you can in each line. Pad extra spaces ' ' when necessary so that each line has exactly maxWidth characters. Extra spaces between words should be distributed as evenly as possible. If the number of spaces on a line does not divide evenly between words, the empty slots on the left will be assigned more spaces than the slots on the right. For the last line of text, it should be left-justified and no extra space is inserted between words. Note: ","Array,String,Simulation","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjEw,VG9waWNUYWdOb2RlOjYxMDU1",Hard,35.0,689234,241053,,1722,2843,,"1714,2260","Rearrange Spaces Between Words,Divide a String Into Groups of Size k"
Sqrt(x),sqrtx,69,"Given a non-negative integer x, compute and return the square root of x. Since the return type is an integer, the decimal digits are truncated, and only the integer part of the result is returned. Note: You are not allowed to use any built-in exponent function or operator, such as pow(x, 0.5) or x ** 0.5. ","Math,Binary Search","VG9waWNUYWdOb2RlOjg=,VG9waWNUYWdOb2RlOjEx",Easy,36.4,2776055,1011489,,3661,3137,Try exploring all integers. (Credits: @annujoshi) Use the sorted property of integers to reduced the search space. (Credits: @annujoshi),"50,367","Pow(x, n),Valid Perfect Square"
Climbing Stairs,climbing-stairs,70,You are climbing a staircase. It takes n steps to reach the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top? ,"Math,Dynamic Programming,Memoization","VG9waWNUYWdOb2RlOjg=,VG9waWNUYWdOb2RlOjEz,VG9waWNUYWdOb2RlOjMz",Easy,51.0,2952667,1504735,,11310,350,"To reach nth step, what could have been your previous steps? (Think about the step sizes)","747,1013,1236","Min Cost Climbing Stairs,Fibonacci Number,N-th Tribonacci Number"
Simplify Path,simplify-path,71,"Given a string path, which is an absolute path (starting with a slash '/') to a file or directory in a Unix-style file system, convert it to the simplified canonical path. In a Unix-style file system, a period '.' refers to the current directory, a double period '..' refers to the directory up a level, and any multiple consecutive slashes (i.e. '//') are treated as a single slash '/'. For this problem, any other format of periods such as '...' are treated as file/directory names. The canonical path should have the following format: Return the simplified canonical path. ","String,Stack","VG9waWNUYWdOb2RlOjEw,VG9waWNUYWdOb2RlOjE1",Medium,38.8,1081568,419168,,2314,465,,,
Edit Distance,edit-distance,72,"Given two strings word1 and word2, return the minimum number of operations required to convert word1 to word2. You have the following three operations permitted on a word: ","String,Dynamic Programming","VG9waWNUYWdOb2RlOjEw,VG9waWNUYWdOb2RlOjEz",Hard,50.7,909629,460956,,8166,92,,"161,583,712,1105,2311","One Edit Distance,Delete Operation for Two Strings,Minimum ASCII Delete Sum for Two Strings,Uncrossed Lines,Minimum White Tiles After Covering With Carpets"
Set Matrix Zeroes,set-matrix-zeroes,73,"Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's. You must do it in place. ","Array,Hash Table,Matrix","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjY=,VG9waWNUYWdOb2RlOjYxMDUz",Medium,48.2,1379982,664738,,6658,481,"If any cell of the matrix has a zero we can record its row and column number using additional memory.
But if you don't want to use extra memory then you can manipulate the array instead. i.e. simulating exactly what the question says. Setting cell values to zero on the fly while iterating might lead to discrepancies. What if you use some other integer value as your marker?
There is still a better approach for this problem with 0(1) space. We could have used 2 sets to keep a record of rows/columns which need to be set to zero. But for an O(1) space solution, you can use one of the rows and and one of the columns to keep track of this information. We can use the first cell of every row and column as a flag. This flag would determine whether a row or column has been set to zero.","289,2244,2259,2314","Game of Life,Number of Laser Beams in a Bank,Minimum Operations to Remove Adjacent Ones in Matrix,Remove All Ones With Row and Column Flips II"
Search a 2D Matrix,search-a-2d-matrix,74,Write an efficient algorithm that searches for a value target in an m x n integer matrix matrix. This matrix has the following properties: ,"Array,Binary Search,Matrix","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjEx,VG9waWNUYWdOb2RlOjYxMDUz",Medium,44.2,1713958,757291,,7220,263,,240,Search a 2D Matrix II
Sort Colors,sort-colors,75,"Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue. We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively. You must solve this problem without using the library's sort function. ","Array,Two Pointers,Sorting","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjk=,VG9waWNUYWdOb2RlOjYxMDQ5",Medium,54.6,1791336,978245,,9434,408,"A rather straight forward solution is a two-pass algorithm using counting sort. Iterate the array counting number of 0's, 1's, and 2's. Overwrite array with the total number of 0's, then 1's and followed by 2's.","148,280,324","Sort List,Wiggle Sort,Wiggle Sort II"
Minimum Window Substring,minimum-window-substring,76,"Given two strings s and t of lengths m and n respectively, return the minimum window substring of s such that every character in t (including duplicates) is included in the window. If there is no such substring, return the empty string """". The testcases will be generated such that the answer is unique. A substring is a contiguous sequence of characters within the string. ","Hash Table,String,Sliding Window","VG9waWNUYWdOb2RlOjY=,VG9waWNUYWdOb2RlOjEw,VG9waWNUYWdOb2RlOjU1ODIx",Hard,38.9,1890669,735482,,9964,529,"Use two pointers to create a window of letters in S, which would have all the characters from T. Since you have to find the minimum window in S which has all the characters from T, you need to expand and contract the window using the two pointers and keep checking the window for all the characters. This approach is also called Sliding Window Approach.



L ------------------------ R , Suppose this is the window that contains all characters of T 
                          
        L----------------- R , this is the contracted window. We found a smaller window that still contains all the characters in T

When the window is no longer valid, start expanding again using the right pointer.","30,209,239,567,632,727","Substring with Concatenation of All Words,Minimum Size Subarray Sum,Sliding Window Maximum,Permutation in String,Smallest Range Covering Elements from K Lists,Minimum Window Subsequence"
Combinations,combinations,77,"Given two integers n and k, return all possible combinations of k numbers out of the range [1, n]. You may return the answer in any order. ",Backtracking,VG9waWNUYWdOb2RlOjE0,Medium,63.7,799662,509584,,4032,136,,"39,46","Combination Sum,Permutations"
Subsets,subsets,78,"Given an integer array nums of unique elements, return all possible subsets (the power set). The solution set must not contain duplicate subsets. Return the solution in any order. ","Array,Backtracking,Bit Manipulation","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjE0,VG9waWNUYWdOb2RlOjE5",Medium,71.2,1493029,1063773,,9680,153,,"90,320,800,2109,2170","Subsets II,Generalized Abbreviation,Letter Case Permutation,Find Array Given Subset Sums,Count Number of Maximum Bitwise-OR Subsets"
Word Search,word-search,79,"Given an m x n grid of characters board and a string word, return true if word exists in the grid. The word can be constructed from letters of sequentially adjacent cells, where adjacent cells are horizontally or vertically neighboring. The same letter cell may not be used more than once. ","Array,Backtracking,Matrix","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjE0,VG9waWNUYWdOb2RlOjYxMDUz",Medium,39.6,2376458,940859,,8999,344,,212,Word Search II
Remove Duplicates from Sorted Array II,remove-duplicates-from-sorted-array-ii,80,"Given an integer array nums sorted in non-decreasing order, remove some duplicates in-place such that each unique element appears at most twice. The relative order of the elements should be kept the same. Since it is impossible to change the length of the array in some languages, you must instead have the result be placed in the first part of the array nums. More formally, if there are k elements after removing the duplicates, then the first k elements of nums should hold the final result. It does not matter what you leave beyond the first k elements. Return k after placing the final result in the first k slots of nums. Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory. Custom Judge: The judge will test your solution with the following code: If all assertions pass, then your solution will be accepted. ","Array,Two Pointers","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjk=",Medium,50.5,846310,427094,,3555,919,,26,Remove Duplicates from Sorted Array
Search in Rotated Sorted Array II,search-in-rotated-sorted-array-ii,81,"There is an integer array nums sorted in non-decreasing order (not necessarily with distinct values). Before being passed to your function, nums is rotated at an unknown pivot index k (0 <= k < nums.length) such that the resulting array is [nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]] (0-indexed). For example, [0,1,2,4,4,4,5,6,6,7] might be rotated at pivot index 5 and become [4,5,6,6,7,0,1,2,4,4]. Given the array nums after the rotation and an integer target, return true if target is in nums, or false if it is not in nums. You must decrease the overall operation steps as much as possible. ","Array,Binary Search","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjEx",Medium,35.5,1179147,419141,,4331,718,,33,Search in Rotated Sorted Array
Remove Duplicates from Sorted List II,remove-duplicates-from-sorted-list-ii,82,"Given the head of a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list. Return the linked list sorted as well. ","Linked List,Two Pointers","VG9waWNUYWdOb2RlOjc=,VG9waWNUYWdOb2RlOjk=",Medium,44.2,1085754,480084,,5610,164,,"83,1982","Remove Duplicates from Sorted List,Remove Duplicates From an Unsorted Linked List"
Remove Duplicates from Sorted List,remove-duplicates-from-sorted-list,83,"Given the head of a sorted linked list, delete all duplicates such that each element appears only once. Return the linked list sorted as well. ",Linked List,VG9waWNUYWdOb2RlOjc=,Easy,49.0,1714235,839133,,4634,183,,"82,1982","Remove Duplicates from Sorted List II,Remove Duplicates From an Unsorted Linked List"
Largest Rectangle in Histogram,largest-rectangle-in-histogram,84,"Given an array of integers heights representing the histogram's bar height where the width of each bar is 1, return the area of the largest rectangle in the histogram. ","Array,Stack,Monotonic Stack","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjE1,VG9waWNUYWdOb2RlOjYxMDU0",Hard,40.7,1220391,496774,,9616,142,,"85,1918","Maximal Rectangle,Maximum Score of a Good Subarray"
Maximal Rectangle,maximal-rectangle,85,"Given a rows x cols binary matrix filled with 0's and 1's, find the largest rectangle containing only 1's and return its area. ","Array,Dynamic Programming,Stack,Matrix,Monotonic Stack","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjEz,VG9waWNUYWdOb2RlOjE1,VG9waWNUYWdOb2RlOjYxMDUz,VG9waWNUYWdOb2RlOjYxMDU0",Hard,42.7,682660,291357,,6471,106,,"84,221","Largest Rectangle in Histogram,Maximal Square"
Partition List,partition-list,86,"Given the head of a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x. You should preserve the original relative order of the nodes in each of the two partitions. ","Linked List,Two Pointers","VG9waWNUYWdOb2RlOjc=,VG9waWNUYWdOb2RlOjk=",Medium,47.8,703320,335965,,3376,474,,2265,Partition Array According to Given Pivot
Scramble String,scramble-string,87,"We can scramble a string s to get a string t using the following algorithm: Given two strings s1 and s2 of the same length, return true if s2 is a scrambled string of s1, otherwise, return false. ","String,Dynamic Programming","VG9waWNUYWdOb2RlOjEw,VG9waWNUYWdOb2RlOjEz",Hard,35.6,402343,143122,,1406,928,,,
Merge Sorted Array,merge-sorted-array,88,"You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively. Merge nums1 and nums2 into a single array sorted in non-decreasing order. The final sorted array should not be returned by the function, but instead be stored inside the array nums1. To accommodate this, nums1 has a length of m + n, where the first m elements denote the elements that should be merged, and the last n elements are set to 0 and should be ignored. nums2 has a length of n. ","Array,Two Pointers,Sorting","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjk=,VG9waWNUYWdOb2RlOjYxMDQ5",Easy,43.7,3069815,1342555,,4189,401,"You can easily solve this problem if you simply think about two elements at a time rather than two arrays. We know that each of the individual arrays is sorted. What we don't know is how they will intertwine. Can we take a local decision and arrive at an optimal solution? If you simply consider one element each at a time from the two arrays and make a decision and proceed accordingly, you will arrive at the optimal solution.","21,1019,1028","Merge Two Sorted Lists,Squares of a Sorted Array,Interval List Intersections"
Gray Code,gray-code,89,"An n-bit gray code sequence is a sequence of 2n integers where: Given an integer n, return any valid n-bit gray code sequence. ","Math,Backtracking,Bit Manipulation","VG9waWNUYWdOb2RlOjg=,VG9waWNUYWdOb2RlOjE0,VG9waWNUYWdOb2RlOjE5",Medium,55.2,418722,231054,,1421,2248,,717,1-bit and 2-bit Characters
Subsets II,subsets-ii,90,"Given an integer array nums that may contain duplicates, return all possible subsets (the power set). The solution set must not contain duplicate subsets. Return the solution in any order. ","Array,Backtracking,Bit Manipulation","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjE0,VG9waWNUYWdOb2RlOjE5",Medium,53.1,924788,491045,,4830,149,,"78,2109","Subsets,Find Array Given Subset Sums"
Decode Ways,decode-ways,91,"A message containing letters from A-Z can be encoded into numbers using the following mapping: To decode an encoded message, all the digits must be grouped then mapped back into letters using the reverse of the mapping above (there may be multiple ways). For example, ""11106"" can be mapped into: Note that the grouping (1 11 06) is invalid because ""06"" cannot be mapped into 'F' since ""6"" is different from ""06"". Given a string s containing only digits, return the number of ways to decode it. The test cases are generated so that the answer fits in a 32-bit integer. ","String,Dynamic Programming","VG9waWNUYWdOb2RlOjEw,VG9waWNUYWdOb2RlOjEz",Medium,30.1,2536389,764501,,6691,3792,,"639,2091","Decode Ways II,Number of Ways to Separate Numbers"
Reverse Linked List II,reverse-linked-list-ii,92,"Given the head of a singly linked list and two integers left and right where left <= right, reverse the nodes of the list from position left to position right, and return the reversed list. ",Linked List,VG9waWNUYWdOb2RlOjc=,Medium,43.3,1088239,471279,,5945,278,,206,Reverse Linked List
Restore IP Addresses,restore-ip-addresses,93,"A valid IP address consists of exactly four integers separated by single dots. Each integer is between 0 and 255 (inclusive) and cannot have leading zeros. Given a string s containing only digits, return all possible valid IP addresses that can be formed by inserting dots into s. You are not allowed to reorder or remove any digits in s. You may return the valid IP addresses in any order. ","String,Backtracking","VG9waWNUYWdOb2RlOjEw,VG9waWNUYWdOb2RlOjE0",Medium,41.7,705550,294170,,2649,624,,752,IP to CIDR
Binary Tree Inorder Traversal,binary-tree-inorder-traversal,94,"Given the root of a binary tree, return the inorder traversal of its nodes' values. ","Stack,Tree,Depth-First Search,Binary Tree","VG9waWNUYWdOb2RlOjE1,VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjIx,VG9waWNUYWdOb2RlOjYxMDU3",Easy,70.6,2018990,1425499,,7405,335,,"98,144,145,173,230,272,285,758,799","Validate Binary Search Tree,Binary Tree Preorder Traversal,Binary Tree Postorder Traversal,Binary Search Tree Iterator,Kth Smallest Element in a BST,Closest Binary Search Tree Value II,Inorder Successor in BST,Convert Binary Search Tree to Sorted Doubly Linked List,Minimum Distance Between BST Nodes"
Unique Binary Search Trees II,unique-binary-search-trees-ii,95,"Given an integer n, return all the structurally unique BST's (binary search trees), which has exactly n nodes of unique values from 1 to n. Return the answer in any order. ","Dynamic Programming,Backtracking,Tree,Binary Search Tree,Binary Tree","VG9waWNUYWdOb2RlOjEz,VG9waWNUYWdOb2RlOjE0,VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjMw,VG9waWNUYWdOb2RlOjYxMDU3",Medium,49.3,612378,301936,,4623,302,,"96,241","Unique Binary Search Trees,Different Ways to Add Parentheses"
Unique Binary Search Trees,unique-binary-search-trees,96,"Given an integer n, return the number of structurally unique BST's (binary search trees) which has exactly n nodes of unique values from 1 to n. ","Math,Dynamic Programming,Tree,Binary Search Tree,Binary Tree","VG9waWNUYWdOb2RlOjg=,VG9waWNUYWdOb2RlOjEz,VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjMw,VG9waWNUYWdOb2RlOjYxMDU3",Medium,58.2,815533,474825,,7042,284,,95,Unique Binary Search Trees II
Interleaving String,interleaving-string,97,"Given strings s1, s2, and s3, find whether s3 is formed by an interleaving of s1 and s2. An interleaving of two strings s and t is a configuration where they are divided into non-empty substrings such that: Note: a + b is the concatenation of strings a and b. ","String,Dynamic Programming","VG9waWNUYWdOb2RlOjEw,VG9waWNUYWdOb2RlOjEz",Medium,34.7,748031,259515,,3784,202,,,
Validate Binary Search Tree,validate-binary-search-tree,98,"Given the root of a binary tree, determine if it is a valid binary search tree (BST). A valid BST is defined as follows: ","Tree,Depth-First Search,Binary Search Tree,Binary Tree","VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjIx,VG9waWNUYWdOb2RlOjMw,VG9waWNUYWdOb2RlOjYxMDU3",Medium,30.5,4483144,1365470,,9434,874,,"94,501","Binary Tree Inorder Traversal,Find Mode in Binary Search Tree"
Recover Binary Search Tree,recover-binary-search-tree,99,"You are given the root of a binary search tree (BST), where the values of exactly two nodes of the tree were swapped by mistake. Recover the tree without changing its structure. ","Tree,Depth-First Search,Binary Search Tree,Binary Tree","VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjIx,VG9waWNUYWdOb2RlOjMw,VG9waWNUYWdOb2RlOjYxMDU3",Medium,46.3,603807,279687,,4150,154,,,
Same Tree,same-tree,100,"Given the roots of two binary trees p and q, write a function to check if they are the same or not. Two binary trees are considered the same if they are structurally identical, and the nodes have the same value. ","Tree,Depth-First Search,Breadth-First Search,Binary Tree","VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjIx,VG9waWNUYWdOb2RlOjIy,VG9waWNUYWdOb2RlOjYxMDU3",Easy,55.5,1816972,1008051,,5477,132,,,
Symmetric Tree,symmetric-tree,101,"Given the root of a binary tree, check whether it is a mirror of itself (i.e., symmetric around its center). ","Tree,Depth-First Search,Breadth-First Search,Binary Tree","VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjIx,VG9waWNUYWdOb2RlOjIy,VG9waWNUYWdOb2RlOjYxMDU3",Easy,51.5,2345643,1207686,,9140,225,,,
Binary Tree Level Order Traversal,binary-tree-level-order-traversal,102,"Given the root of a binary tree, return the level order traversal of its nodes' values. (i.e., from left to right, level by level). ","Tree,Breadth-First Search,Binary Tree","VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjIy,VG9waWNUYWdOb2RlOjYxMDU3",Medium,60.8,1979250,1203028,,7903,156,,"103,107,111,314,637,764,1035","Binary Tree Zigzag Level Order Traversal,Binary Tree Level Order Traversal II,Minimum Depth of Binary Tree,Binary Tree Vertical Order Traversal,Average of Levels in Binary Tree,N-ary Tree Level Order Traversal,Cousins in Binary Tree"
Binary Tree Zigzag Level Order Traversal,binary-tree-zigzag-level-order-traversal,103,"Given the root of a binary tree, return the zigzag level order traversal of its nodes' values. (i.e., from left to right, then right to left for the next level and alternate between). ","Tree,Breadth-First Search,Binary Tree","VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjIy,VG9waWNUYWdOb2RlOjYxMDU3",Medium,53.5,1299175,694977,,5665,168,,102,Binary Tree Level Order Traversal
Maximum Depth of Binary Tree,maximum-depth-of-binary-tree,104,"Given the root of a binary tree, return its maximum depth. A binary tree's maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node. ","Tree,Depth-First Search,Breadth-First Search,Binary Tree","VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjIx,VG9waWNUYWdOb2RlOjIy,VG9waWNUYWdOb2RlOjYxMDU3",Easy,71.8,2259723,1621474,,6744,124,,"110,111,774,1492","Balanced Binary Tree,Minimum Depth of Binary Tree,Maximum Depth of N-ary Tree,Time Needed to Inform All Employees"
Construct Binary Tree from Preorder and Inorder Traversal,construct-binary-tree-from-preorder-and-inorder-traversal,105,"Given two integer arrays preorder and inorder where preorder is the preorder traversal of a binary tree and inorder is the inorder traversal of the same tree, construct and return the binary tree. ","Array,Hash Table,Divide and Conquer,Tree,Binary Tree","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjY=,VG9waWNUYWdOb2RlOjEy,VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjYxMDU3",Medium,57.5,1199122,688958,,8192,218,,106,Construct Binary Tree from Inorder and Postorder Traversal
Construct Binary Tree from Inorder and Postorder Traversal,construct-binary-tree-from-inorder-and-postorder-traversal,106,"Given two integer arrays inorder and postorder where inorder is the inorder traversal of a binary tree and postorder is the postorder traversal of the same tree, construct and return the binary tree. ","Array,Hash Table,Divide and Conquer,Tree,Binary Tree","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjY=,VG9waWNUYWdOb2RlOjEy,VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjYxMDU3",Medium,55.2,707765,390759,,4348,72,,105,Construct Binary Tree from Preorder and Inorder Traversal
Binary Tree Level Order Traversal II,binary-tree-level-order-traversal-ii,107,"Given the root of a binary tree, return the bottom-up level order traversal of its nodes' values. (i.e., from left to right, level by level from leaf to root). ","Tree,Breadth-First Search,Binary Tree","VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjIy,VG9waWNUYWdOb2RlOjYxMDU3",Medium,58.6,841912,493042,,3118,276,,"102,637","Binary Tree Level Order Traversal,Average of Levels in Binary Tree"
Convert Sorted Array to Binary Search Tree,convert-sorted-array-to-binary-search-tree,108,"Given an integer array nums where the elements are sorted in ascending order, convert it to a height-balanced binary search tree. A height-balanced binary tree is a binary tree in which the depth of the two subtrees of every node never differs by more than one. ","Array,Divide and Conquer,Tree,Binary Search Tree,Binary Tree","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjEy,VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjMw,VG9waWNUYWdOb2RlOjYxMDU3",Easy,65.9,1096431,722308,,6158,349,,109,Convert Sorted List to Binary Search Tree
Convert Sorted List to Binary Search Tree,convert-sorted-list-to-binary-search-tree,109,"Given the head of a singly linked list where elements are sorted in ascending order, convert it to a height balanced BST. For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1. ","Linked List,Divide and Conquer,Tree,Binary Search Tree,Binary Tree","VG9waWNUYWdOb2RlOjc=,VG9waWNUYWdOb2RlOjEy,VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjMw,VG9waWNUYWdOb2RlOjYxMDU3",Medium,55.4,664109,367942,,4468,113,,"108,2306","Convert Sorted Array to Binary Search Tree,Create Binary Tree From Descriptions"
Balanced Binary Tree,balanced-binary-tree,110,"Given a binary tree, determine if it is height-balanced. For this problem, a height-balanced binary tree is defined as: a binary tree in which the left and right subtrees of every node differ in height by no more than 1. ","Tree,Depth-First Search,Binary Tree","VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjIx,VG9waWNUYWdOb2RlOjYxMDU3",Easy,46.7,1589907,742307,,5563,301,,104,Maximum Depth of Binary Tree
Minimum Depth of Binary Tree,minimum-depth-of-binary-tree,111,"Given a binary tree, find its minimum depth. The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node. Note: A leaf is a node with no children. ","Tree,Depth-First Search,Breadth-First Search,Binary Tree","VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjIx,VG9waWNUYWdOb2RlOjIy,VG9waWNUYWdOb2RlOjYxMDU3",Easy,42.4,1740210,737939,,3963,942,,"102,104","Binary Tree Level Order Traversal,Maximum Depth of Binary Tree"
Path Sum,path-sum,112,"Given the root of a binary tree and an integer targetSum, return true if the tree has a root-to-leaf path such that adding up all the values along the path equals targetSum. A leaf is a node with no children. ","Tree,Depth-First Search,Breadth-First Search,Binary Tree","VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjIx,VG9waWNUYWdOb2RlOjIy,VG9waWNUYWdOb2RlOjYxMDU3",Easy,45.4,1884955,856231,,5299,779,,"113,124,129,437,666","Path Sum II,Binary Tree Maximum Path Sum,Sum Root to Leaf Numbers,Path Sum III,Path Sum IV"
Path Sum II,path-sum-ii,113,"Given the root of a binary tree and an integer targetSum, return all root-to-leaf paths where the sum of the node values in the path equals targetSum. Each path should be returned as a list of the node values, not node references. A root-to-leaf path is a path starting from the root and ending at any leaf node. A leaf is a node with no children. ","Backtracking,Tree,Depth-First Search,Binary Tree","VG9waWNUYWdOb2RlOjE0,VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjIx,VG9waWNUYWdOb2RlOjYxMDU3",Medium,53.9,1052748,567301,,4603,109,,"112,257,437,666,2217","Path Sum,Binary Tree Paths,Path Sum III,Path Sum IV,Step-By-Step Directions From a Binary Tree Node to Another"
Flatten Binary Tree to Linked List,flatten-binary-tree-to-linked-list,114,"Given the root of a binary tree, flatten the tree into a ""linked list"": ","Linked List,Stack,Tree,Depth-First Search,Binary Tree","VG9waWNUYWdOb2RlOjc=,VG9waWNUYWdOb2RlOjE1,VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjIx,VG9waWNUYWdOb2RlOjYxMDU3",Medium,57.7,1026199,591658,,6892,461,"If you notice carefully in the flattened tree, each node's right child points to the next node of a pre-order traversal.","766,1796","Flatten a Multilevel Doubly Linked List,Correct a Binary Tree"
Distinct Subsequences,distinct-subsequences,115,"Given two strings s and t, return the number of distinct subsequences of s which equals t. A string's subsequence is a new string formed from the original string by deleting some (can be none) of the characters without disturbing the remaining characters' relative positions. (i.e., ""ACE"" is a subsequence of ""ABCDE"" while ""AEC"" is not). The test cases are generated so that the answer fits on a 32-bit signed integer. ","String,Dynamic Programming","VG9waWNUYWdOb2RlOjEw,VG9waWNUYWdOb2RlOjEz",Hard,42.2,509853,215300,,3321,146,,2115,Number of Unique Good Subsequences
Populating Next Right Pointers in Each Node,populating-next-right-pointers-in-each-node,116,"You are given a perfect binary tree where all leaves are on the same level, and every parent has two children. The binary tree has the following definition: Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to NULL. Initially, all next pointers are set to NULL. ","Linked List,Tree,Depth-First Search,Breadth-First Search,Binary Tree","VG9waWNUYWdOb2RlOjc=,VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjIx,VG9waWNUYWdOb2RlOjIy,VG9waWNUYWdOb2RlOjYxMDU3",Medium,56.8,1278931,726230,,6291,229,,"117,199","Populating Next Right Pointers in Each Node II,Binary Tree Right Side View"
Populating Next Right Pointers in Each Node II,populating-next-right-pointers-in-each-node-ii,117,"Given a binary tree Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to NULL. Initially, all next pointers are set to NULL. ","Linked List,Tree,Depth-First Search,Breadth-First Search,Binary Tree","VG9waWNUYWdOb2RlOjc=,VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjIx,VG9waWNUYWdOb2RlOjIy,VG9waWNUYWdOb2RlOjYxMDU3",Medium,46.5,923889,429180,,3606,237,,116,Populating Next Right Pointers in Each Node
Pascal's Triangle,pascals-triangle,118,"Given an integer numRows, return the first numRows of Pascal's triangle. In Pascal's triangle, each number is the sum of the two numbers directly above it as shown: ","Array,Dynamic Programming","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjEz",Easy,64.2,1195766,767602,,5477,206,,119,Pascal's Triangle II
Pascal's Triangle II,pascals-triangle-ii,119,"Given an integer rowIndex, return the rowIndexth (0-indexed) row of the Pascal's triangle. In Pascal's triangle, each number is the sum of the two numbers directly above it as shown: ","Array,Dynamic Programming","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjEz",Easy,57.3,888446,509354,,2474,263,,"118,2324","Pascal's Triangle,Find Triangular Sum of an Array"
Triangle,triangle,120,"Given a triangle array, return the minimum path sum from top to bottom. For each step, you may move to an adjacent number of the row below. More formally, if you are on index i on the current row, you may move to either index i or index i + 1 on the next row. ","Array,Dynamic Programming","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjEz",Medium,50.6,807721,409106,,4786,380,,,
Best Time to Buy and Sell Stock,best-time-to-buy-and-sell-stock,121,"You are given an array prices where prices[i] is the price of a given stock on the ith day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0. ","Array,Dynamic Programming","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjEz",Easy,54.0,3860000,2084089,,15488,522,,"53,122,123,188,309,2138,2144","Maximum Subarray,Best Time to Buy and Sell Stock II,Best Time to Buy and Sell Stock III,Best Time to Buy and Sell Stock IV,Best Time to Buy and Sell Stock with Cooldown,Sum of Beauty in the Array,Maximum Difference Between Increasing Elements"
Best Time to Buy and Sell Stock II,best-time-to-buy-and-sell-stock-ii,122,"You are given an integer array prices where prices[i] is the price of a given stock on the ith day. On each day, you may decide to buy and/or sell the stock. You can only hold at most one share of the stock at any time. However, you can buy it then immediately sell it on the same day. Find and return the maximum profit you can achieve. ","Array,Dynamic Programming,Greedy","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjEz,VG9waWNUYWdOb2RlOjE3",Medium,61.9,1815327,1123641,,7301,2353,,"121,123,188,309,714","Best Time to Buy and Sell Stock,Best Time to Buy and Sell Stock III,Best Time to Buy and Sell Stock IV,Best Time to Buy and Sell Stock with Cooldown,Best Time to Buy and Sell Stock with Transaction Fee"
Best Time to Buy and Sell Stock III,best-time-to-buy-and-sell-stock-iii,123,"You are given an array prices where prices[i] is the price of a given stock on the ith day. Find the maximum profit you can achieve. You may complete at most two transactions. Note: You may not engage in multiple transactions simultaneously (i.e., you must sell the stock before you buy again). ","Array,Dynamic Programming","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjEz",Hard,43.1,870907,375384,,5662,115,,"121,122,188,689","Best Time to Buy and Sell Stock,Best Time to Buy and Sell Stock II,Best Time to Buy and Sell Stock IV,Maximum Sum of 3 Non-Overlapping Subarrays"
Binary Tree Maximum Path Sum,binary-tree-maximum-path-sum,124,"A path in a binary tree is a sequence of nodes where each pair of adjacent nodes in the sequence has an edge connecting them. A node can only appear in the sequence at most once. Note that the path does not need to pass through the root. The path sum of a path is the sum of the node's values in the path. Given the root of a binary tree, return the maximum path sum of any non-empty path. ","Dynamic Programming,Tree,Depth-First Search,Binary Tree","VG9waWNUYWdOb2RlOjEz,VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjIx,VG9waWNUYWdOb2RlOjYxMDU3",Hard,37.6,1899960,714542,,9151,529,,"112,129,666,687,1492","Path Sum,Sum Root to Leaf Numbers,Path Sum IV,Longest Univalue Path,Time Needed to Inform All Employees"
Valid Palindrome,valid-palindrome,125,"A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers. Given a string s, return true if it is a palindrome, or false otherwise. ","Two Pointers,String","VG9waWNUYWdOb2RlOjk=,VG9waWNUYWdOb2RlOjEw",Easy,41.5,2944250,1220904,,3460,5081,,"234,680,2130,2231","Palindrome Linked List,Valid Palindrome II,Maximum Product of the Length of Two Palindromic Subsequences,Find First Palindromic String in the Array"
Word Ladder II,word-ladder-ii,126,"A transformation sequence from word beginWord to word endWord using a dictionary wordList is a sequence of words beginWord -> s1 -> s2 -> ... -> sk such that: Given two words, beginWord and endWord, and a dictionary wordList, return all the shortest transformation sequences from beginWord to endWord, or an empty list if no such sequence exists. Each sequence should be returned as a list of the words [beginWord, s1, s2, ..., sk]. ","Hash Table,String,Backtracking,Breadth-First Search","VG9waWNUYWdOb2RlOjY=,VG9waWNUYWdOb2RlOjEw,VG9waWNUYWdOb2RlOjE0,VG9waWNUYWdOb2RlOjIy",Hard,26.9,1063919,286219,,3571,333,,"127,2276","Word Ladder,Groups of Strings"
Word Ladder,word-ladder,127,"A transformation sequence from word beginWord to word endWord using a dictionary wordList is a sequence of words beginWord -> s1 -> s2 -> ... -> sk such that: Given two words, beginWord and endWord, and a dictionary wordList, return the number of words in the shortest transformation sequence from beginWord to endWord, or 0 if no such sequence exists. ","Hash Table,String,Breadth-First Search","VG9waWNUYWdOb2RlOjY=,VG9waWNUYWdOb2RlOjEw,VG9waWNUYWdOb2RlOjIy",Hard,35.4,2134427,754570,,7748,1635,,"126,433","Word Ladder II,Minimum Genetic Mutation"
Longest Consecutive Sequence,longest-consecutive-sequence,128,"Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence. You must write an algorithm that runs in O(n) time. ","Array,Hash Table,Union Find","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjY=,VG9waWNUYWdOb2RlOjIz",Medium,48.7,1319683,642062,,9034,398,,"298,2278","Binary Tree Longest Consecutive Sequence,Find Three Consecutive Integers That Sum to a Given Number"
Sum Root to Leaf Numbers,sum-root-to-leaf-numbers,129,You are given the root of a binary tree containing digits from 0 to 9 only. Each root-to-leaf path in the tree represents a number. Return the total sum of all root-to-leaf numbers. Test cases are generated so that the answer will fit in a 32-bit integer. A leaf node is a node with no children. ,"Tree,Depth-First Search,Binary Tree","VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjIx,VG9waWNUYWdOb2RlOjYxMDU3",Medium,56.8,795340,451675,,4097,78,,"112,124,1030","Path Sum,Binary Tree Maximum Path Sum,Smallest String Starting From Leaf"
Surrounded Regions,surrounded-regions,130,"Given an m x n matrix board containing 'X' and 'O', capture all regions that are 4-directionally surrounded by 'X'. A region is captured by flipping all 'O's into 'X's in that surrounded region. ","Array,Depth-First Search,Breadth-First Search,Union Find,Matrix","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjIx,VG9waWNUYWdOb2RlOjIy,VG9waWNUYWdOb2RlOjIz,VG9waWNUYWdOb2RlOjYxMDUz",Medium,33.9,1196214,405287,,4684,1164,,"200,286","Number of Islands,Walls and Gates"
Palindrome Partitioning,palindrome-partitioning,131,"Given a string s, partition s such that every substring of the partition is a palindrome. Return all possible palindrome partitioning of s. A palindrome string is a string that reads the same backward as forward. ","String,Dynamic Programming,Backtracking","VG9waWNUYWdOb2RlOjEw,VG9waWNUYWdOb2RlOjEz,VG9waWNUYWdOb2RlOjE0",Medium,59.3,746356,442390,,6475,201,,"132,1871","Palindrome Partitioning II,Palindrome Partitioning IV"
Palindrome Partitioning II,palindrome-partitioning-ii,132,"Given a string s, partition s such that every substring of the partition is a palindrome. Return the minimum cuts needed for a palindrome partitioning of s. ","String,Dynamic Programming","VG9waWNUYWdOb2RlOjEw,VG9waWNUYWdOb2RlOjEz",Hard,33.1,606455,200922,,3268,77,,"131,1871","Palindrome Partitioning,Palindrome Partitioning IV"
Clone Graph,clone-graph,133,"Given a reference of a node in a connected undirected graph. Return a deep copy (clone) of the graph. Each node in the graph contains a value (int) and a list (List[Node]) of its neighbors.  Test case format: For simplicity, each node's value is the same as the node's index (1-indexed). For example, the first node with val == 1, the second node with val == 2, and so on. The graph is represented in the test case using an adjacency list. An adjacency list is a collection of unordered lists used to represent a finite graph. Each list describes the set of neighbors of a node in the graph. The given node will always be the first node with val = 1. You must return the copy of the given node as a reference to the cloned graph. ","Hash Table,Depth-First Search,Breadth-First Search,Graph","VG9waWNUYWdOb2RlOjY=,VG9waWNUYWdOb2RlOjIx,VG9waWNUYWdOb2RlOjIy,VG9waWNUYWdOb2RlOjI0",Medium,47.4,1475624,699812,,5546,2459,,"138,1624,1634","Copy List with Random Pointer,Clone Binary Tree With Random Pointer,Clone N-ary Tree"
Gas Station,gas-station,134,"There are n gas stations along a circular route, where the amount of gas at the ith station is gas[i]. You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from the ith station to its next (i + 1)th station. You begin the journey with an empty tank at one of the gas stations. Given two integer arrays gas and cost, return the starting gas station's index if you can travel around the circuit once in the clockwise direction, otherwise return -1. If there exists a solution, it is guaranteed to be unique ","Array,Greedy","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjE3",Medium,44.4,899594,399619,,5703,595,,1346,Maximize the Topmost Element After K Moves
Candy,candy,135,There are n children standing in a line. Each child is assigned a rating value given in the integer array ratings. You are giving candies to these children subjected to the following requirements: Return the minimum number of candies you need to have to distribute the candies to the children. ,"Array,Greedy","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjE3",Hard,36.9,570383,210748,,2714,246,,,
Single Number,single-number,136,"Given a non-empty array of integers nums, every element appears twice except for one. Find that single one. You must implement a solution with a linear runtime complexity and use only constant extra space. ","Array,Bit Manipulation","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjE5",Easy,69.3,2321213,1608367,,9569,339,,"137,260,268,287,389","Single Number II,Single Number III,Missing Number,Find the Duplicate Number,Find the Difference"
Single Number II,single-number-ii,137,"Given an integer array nums where every element appears three times except for one, which appears exactly once. Find the single element and return it. You must implement a solution with a linear runtime complexity and use only constant extra space. ","Array,Bit Manipulation","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjE5",Medium,56.5,605201,342067,,4009,475,,"136,260","Single Number,Single Number III"
Copy List with Random Pointer,copy-list-with-random-pointer,138,"A linked list of length n is given such that each node contains an additional random pointer, which could point to any node in the list, or null. Construct a deep copy of the list. The deep copy should consist of exactly n brand new nodes, where each new node has its value set to the value of its corresponding original node. Both the next and random pointer of the new nodes should point to new nodes in the copied list such that the pointers in the original list and copied list represent the same list state. None of the pointers in the new list should point to nodes in the original list. For example, if there are two nodes X and Y in the original list, where X.random --> Y, then for the corresponding two nodes x and y in the copied list, x.random --> y. Return the head of the copied linked list. The linked list is represented in the input/output as a list of n nodes. Each node is represented as a pair of [val, random_index] where: Your code will only be given the head of the original linked list. ","Hash Table,Linked List","VG9waWNUYWdOb2RlOjY=,VG9waWNUYWdOb2RlOjc=",Medium,47.9,1610957,772244,,8313,965,"Just iterate the linked list and create copies of the nodes on the go. Since a node can be referenced from multiple nodes due to the random pointers, make sure you are not making multiple copies of the same node. You may want to use extra space to keep old node ---> new node mapping to prevent creating multiples copies of same node. We can avoid using extra space for old node ---> new node mapping, by tweaking the original linked list. Simply interweave the nodes of the old and copied list. 
For e.g.

Old List: A --> B --> C --> D
InterWeaved List: A --> A' --> B --> B' --> C --> C' --> D --> D' The interweaving is done using next pointers and we can make use of interweaved structure to get the correct reference nodes for random pointers.","133,1624,1634","Clone Graph,Clone Binary Tree With Random Pointer,Clone N-ary Tree"
Word Break,word-break,139,"Given a string s and a dictionary of strings wordDict, return true if s can be segmented into a space-separated sequence of one or more dictionary words. Note that the same word in the dictionary may be reused multiple times in the segmentation. ","Hash Table,String,Dynamic Programming,Trie,Memoization","VG9waWNUYWdOb2RlOjY=,VG9waWNUYWdOb2RlOjEw,VG9waWNUYWdOb2RlOjEz,VG9waWNUYWdOb2RlOjI3,VG9waWNUYWdOb2RlOjMz",Medium,44.5,2363412,1051065,,10183,448,,140,Word Break II
Word Break II,word-break-ii,140,"Given a string s and a dictionary of strings wordDict, add spaces in s to construct a sentence where each word is a valid dictionary word. Return all such possible sentences in any order. Note that the same word in the dictionary may be reused multiple times in the segmentation. ","Hash Table,String,Dynamic Programming,Backtracking,Trie,Memoization","VG9waWNUYWdOb2RlOjY=,VG9waWNUYWdOb2RlOjEw,VG9waWNUYWdOb2RlOjEz,VG9waWNUYWdOb2RlOjE0,VG9waWNUYWdOb2RlOjI3,VG9waWNUYWdOb2RlOjMz",Hard,41.9,1036483,434784,,4595,475,,"139,472","Word Break,Concatenated Words"
Linked List Cycle,linked-list-cycle,141,"Given head, the head of a linked list, determine if the linked list has a cycle in it. There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail's next pointer is connected to. Note that pos is not passed as a parameter. Return true if there is a cycle in the linked list. Otherwise, return false. ","Hash Table,Linked List,Two Pointers","VG9waWNUYWdOb2RlOjY=,VG9waWNUYWdOb2RlOjc=,VG9waWNUYWdOb2RlOjk=",Easy,45.8,3048390,1395560,,7823,773,,"142,202","Linked List Cycle II,Happy Number"
Linked List Cycle II,linked-list-cycle-ii,142,"Given the head of a linked list, return the node where the cycle begins. If there is no cycle, return null. There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail's next pointer is connected to (0-indexed). It is -1 if there is no cycle. Note that pos is not passed as a parameter. Do not modify the linked list. ","Hash Table,Linked List,Two Pointers","VG9waWNUYWdOb2RlOjY=,VG9waWNUYWdOb2RlOjc=,VG9waWNUYWdOb2RlOjk=",Medium,44.1,1486657,656083,,7044,462,,"141,287","Linked List Cycle,Find the Duplicate Number"
Reorder List,reorder-list,143,You are given the head of a singly linked-list. The list can be represented as: Reorder the list to be on the following form: You may not modify the values in the list's nodes. Only nodes themselves may be changed. ,"Linked List,Two Pointers,Stack,Recursion","VG9waWNUYWdOb2RlOjc=,VG9waWNUYWdOb2RlOjk=,VG9waWNUYWdOb2RlOjE1,VG9waWNUYWdOb2RlOjMx",Medium,47.6,983282,468499,,5689,207,,2216,Delete the Middle Node of a Linked List
Binary Tree Preorder Traversal,binary-tree-preorder-traversal,144,"Given the root of a binary tree, return the preorder traversal of its nodes' values. ","Stack,Tree,Depth-First Search,Binary Tree","VG9waWNUYWdOb2RlOjE1,VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjIx,VG9waWNUYWdOb2RlOjYxMDU3",Easy,62.3,1471175,917273,,3931,125,,"94,255,775","Binary Tree Inorder Traversal,Verify Preorder Sequence in Binary Search Tree,N-ary Tree Preorder Traversal"
Binary Tree Postorder Traversal,binary-tree-postorder-traversal,145,"Given the root of a binary tree, return the postorder traversal of its nodes' values. ","Stack,Tree,Depth-First Search,Binary Tree","VG9waWNUYWdOb2RlOjE1,VG9waWNUYWdOb2RlOjIw,VG9waWNUYWdOb2RlOjIx,VG9waWNUYWdOb2RlOjYxMDU3",Easy,63.9,1095333,699695,,4035,136,,"94,776","Binary Tree Inorder Traversal,N-ary Tree Postorder Traversal"
LRU Cache,lru-cache,146,Design a data structure that follows the constraints of a Least Recently Used (LRU) cache. Implement the LRUCache class: The functions get and put must each run in O(1) average time complexity. ,"Hash Table,Linked List,Design,Doubly-Linked List","VG9waWNUYWdOb2RlOjY=,VG9waWNUYWdOb2RlOjc=,VG9waWNUYWdOb2RlOjI1,VG9waWNUYWdOb2RlOjYxMDU4",Medium,39.7,2621253,1041470,,12803,498,,"460,588,604,1903","LFU Cache,Design In-Memory File System,Design Compressed String Iterator,Design Most Recently Used Queue"
Insertion Sort List,insertion-sort-list,147,"Given the head of a singly linked list, sort the list using insertion sort, and return the sorted list's head. The steps of the insertion sort algorithm: The following is a graphical example of the insertion sort algorithm. The partially sorted list (black) initially contains only the first element in the list. One element (red) is removed from the input data and inserted in-place into the sorted list with each iteration. ","Linked List,Sorting","VG9waWNUYWdOb2RlOjc=,VG9waWNUYWdOb2RlOjYxMDQ5",Medium,48.8,578361,282033,,1974,787,,"148,850","Sort List,Insert into a Sorted Circular Linked List"
Sort List,sort-list,148,"Given the head of a linked list, return the list after sorting it in ascending order. ","Linked List,Two Pointers,Divide and Conquer,Sorting,Merge Sort","VG9waWNUYWdOb2RlOjc=,VG9waWNUYWdOb2RlOjk=,VG9waWNUYWdOb2RlOjEy,VG9waWNUYWdOb2RlOjYxMDQ5,VG9waWNUYWdOb2RlOjYxMDUx",Medium,51.9,930950,483584,,6985,229,,"21,75,147,1992","Merge Two Sorted Lists,Sort Colors,Insertion Sort List,Sort Linked List Already Sorted Using Absolute Values"
Max Points on a Line,max-points-on-a-line,149,"Given an array of points where points[i] = [xi, yi] represents a point on the X-Y plane, return the maximum number of points that lie on the same straight line. ","Array,Hash Table,Math,Geometry","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjY=,VG9waWNUYWdOb2RlOjg=,VG9waWNUYWdOb2RlOjM4",Hard,20.4,1113777,226781,,997,176,,"356,2287","Line Reflection,Minimum Number of Lines to Cover Points"
Evaluate Reverse Polish Notation,evaluate-reverse-polish-notation,150,"Evaluate the value of an arithmetic expression in Reverse Polish Notation. Valid operators are +, -, *, and /. Each operand may be an integer or another expression. Note that division between two integers should truncate toward zero. It is guaranteed that the given RPN expression is always valid. That means the expression would always evaluate to a result, and there will not be any division by zero operation. ","Array,Math,Stack","VG9waWNUYWdOb2RlOjU=,VG9waWNUYWdOb2RlOjg=,VG9waWNUYWdOb2RlOjE1",Medium,42.3,936103,396146,,2884,615,,"224,282","Basic Calculator,Expression Add Operators"
